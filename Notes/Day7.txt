Week B Day 2

Classes/Objects
-a place where data and logic/behavior get grouped together
-fields are like variables. they exist in a class and are accessible to methods within that class
-static assigns a method or class to a program and do not require an instance
-access modifiers like public and private are keywords for the methods and classids
-public allows the program to "see" the implementation of the method or class
-override allows the method to gain its own implementation that is uniquely specific from the parent class (Objects)
-name of the class should be the same as the file name.
-method should contain a return type in the signature. If nothing is returned use "void"
-input rules should not be in the program implemantation. That logic should go inside the object (class)
-business rules are defined in the object/class

Lists
inderterminate size. list<int> found in System.Collections.Generic class
Example:
    List<int> numbers = new List<>();
    int howMany = numbers.Count;
    numbers.Add(123); //adds to the end of the list
    int firstItem = number[0]; //access like an array
    numbers.Insert(0,1000); //puts the value of 1000 in to the index 0 (beginning)

    you can use foreach loop on any collection, anything that implements Ienumberable
    